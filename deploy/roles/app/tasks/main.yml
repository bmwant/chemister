---

# should be within its own vars.yml, just an example
- include_vars: "../vars/common.yml"
- include_vars: "vault.yml"
  no_log: true
- include_vars: "../roles/postgres/vars/main.yml"

- name: create project directory
  file:
    path: "{{ project_root }}"
    state: directory
    mode: 0755
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  become: true

- name: clone project repository
  git:
    repo: "{{ repository_url }}"
    dest: "{{ project_root }}"
    version: "{{ repository_branch }}"
    accept_hostkey: true

- name: install requirements with pipenv
  shell: "pipenv install"
  args:
    chdir: "{{ project_root }}"

- name: run database initialization
  shell: "{{ project_root }}/scripts/run_sql.sh"
  environment:
    TEST: ""
    PG_HOST: "{{ pg_host }}"
    PG_DATABASE: "{{ pg_database }}"
    PG_USER: "{{ pg_user }}"
    PG_PASSWORD: "{{ pg_password }}"
    POSTGRES_USER_PASS: "{{ postgres_default_pass }}"

- name: render application config
  template:
    src: "templates/settings_local.py.j2"
    dest: "{{ project_root }}/settings_local.py"

- name: render supervisor config
  template:
    src: "templates/supervisor_che.conf.j2"
    dest: "/etc/supervisor/conf.d/che.conf"
  become: true
  notify: supervisor reload

- name: render nginx config
  template:
    src: "templates/nginx_che.conf.j2"
    dest: "/etc/nginx/conf.d/che.conf"
  become: true
  notify: nginx reload
